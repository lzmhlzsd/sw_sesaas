<style lang="less">
@import './../style/theme';
.block-content {
  padding: 0 20rpx;
  background: #fff;
  border-top: 1px solid @color-l7;
  .list-item {
    display: flex;
    align-items: center;
    padding: 20rpx 10rpx;
    .title {
      width: 140rpx;
      margin-right: 20rpx;
      font-size: 28rpx;
      color: @color-l5;
    }
    .input-item {
      flex: 1;
      input {
        font-size: 28rpx;
        color: #333;
      }
      .picker {
        font-size: 28rpx;
        color: #333;
      }
    }
  }
  .list-item:not(:last-child) {
    border-bottom: 1px solid @color-l7;
  }
}

.btn-box {
  margin-top: 64rpx;
  padding: 0 24rpx;
}

.input-placeholder{
  font-size: 28rpx;
  color: @color-l6;
}

</style>

<template>
  <form bindsubmit="formSubmit">
    <view  class="block-content">
      <view class="list-item">
        <view class="title">收货人</view>
        <inputClear1 class="input-item" prop="receiverName">
          <input slot="input" type="text" name="receiverName" bindinput="bindInput('receiverName')" value="{{receiverName}}" placeholder="姓名"/>
        </inputClear1>
      </view>
      <view class="list-item">
        <view class="title">联系方式</view>
        <inputClear2 class="input-item" prop="mobile">
          <input slot="input" type="number" name="mobile" bindinput="bindInput('mobile')" value="{{mobile}}" placeholder="手机号码"/>
        </inputClear2>
      </view>
      <view class="list-item">
        <view class="title">所在地区</view>
        <view class="input-item">
          <!-- <input type="text" name="mobile" placeholder="-- 请选择 --"/> -->
          <picker mode="region" bindchange="bindRegionChange" value="{{region}}">
            <view class="picker">
              <text wx:if="{{region[0] == '' && region[1] == '' && region[2] == ''}}" style="color: #0072E3;">-- 请选择 --</text>
              <text wx:else>{{region[0]}}-{{region[1]}}-{{region[2]}}</text>
            </view>
          </picker>
          <input hidden="true" type="text" name="area" bindinput="bindInput('area')" value="{{area}}"/>
        </view>
      </view>
      <view class="list-item">
        <view class="title">详细地址</view>
        <inputClear3 class="input-item" prop="address">
          <input slot="input" type="text" name="address" bindinput="bindInput('address')" value="{{address}}" placeholder="详细地址需填写楼栋楼层或房间号信息"/>
        </inputClear3>
      </view>
    </view>
    <view class="btn-box">
      <button class="button type-red" formType="submit">确认</button>
      <button class="button" formType="submit" style="margin-top: 20rpx;">删除地址</button>
    </view>
    <toast class="toast"/>
  </form>
</template>

<script>
import wepy from 'wepy'
import inputClear from './../components/inputClear'
import { vailPhone } from './../utils/util'
import api from './../api/api'
import Toast from 'wepy-com-toast'

export default class AddAddress extends wepy.page {
  config = {
    navigationBarTitleText: '修改收货地址'
  }
  components = {
    inputClear1: inputClear,
    inputClear2: inputClear,
    inputClear3: inputClear,
    toast: Toast
  }

  data = {
    receiverName: '',
    mobile: '',
    area: '',
    address: '',
    region: ['', '', '']
  }
  methods = {
    bindInput(item, e) {
      // console.log(item)
      this[item] = e.detail.value
    },
    formSubmit(e) {
      console.log(e.detail)
      if (e.detail.value.receiverName === '') {
        this.$invoke('toast', 'show', {
          title: '请填写收货人姓名',
          img: './../images/alert.png'
        })
        return
      }
      if (e.detail.value.mobile === '') {
        this.$invoke('toast', 'show', {
          title: '请填写手机号码',
          img: './../images/alert.png'
        })
        return
      } else if (!vailPhone(e.detail.value.mobile)) {
        this.$invoke('toast', 'show', {
          title: '请填写正确的手机号码',
          img: './../images/alert.png'
        })
        return
      }
      if (e.detail.value.area === '') {
        this.$invoke('toast', 'show', {
          title: '请选择所在地区',
          img: './../images/alert.png'
        })
        return
      }
      if (e.detail.value.address === '') {
        this.$invoke('toast', 'show', {
          title: '请填写详细地址',
          img: './../images/alert.png'
        })
        return
      }

      console.log('ok')
    }
  }

  events = {
    'Event.ClearInput': (e) => {
      console.log(`ClearInput: ${e}`)
      this[e] = ''
      // this.$apply()
    }
  }
  onLoad() {}
  onShow() {
    this.getAddressInfo()
  }

   // custom methods
  bindRegionChange(e) {
    this.region = e.detail.value
    this.area = e.detail.value.toString()
  }

  async getAddressInfo() {
    const res = await api.getAddressInfo({ method: 'POST' })
    if (res) {
      if (res.code === 1000) {
        this.receiverName = res.result.name
        this.mobile = res.result.phone
        this.area = res.result.area
        this.address = res.result.address
        this.region = res.result.area.split(',')

        this.$apply()
      } else {
        this.$invoke('toast', 'show', {
          title: res.emsg,
          img: './../images/error.png'
        })
      }
    }
  }
}
</script>
